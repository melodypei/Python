# -*- coding: UTF-8 -*-

#统计A字符串在B字符串中出现的次数
def strcount(str1,str2):
    li = str2.split()
    count = 0
    for i in li:
        if str1 in i:
        #if i.find(str1) != -1:
            count += 1
    return count
print(strcount('abc','abcd   abcde   wert  dfgji   abckkk'))


#如何用一行代码生成[1,4,9,16,25,36,49,64,81,100]
print([i*i for i in range(1,11)])


#如何实现 “1,2,3” 变成 [‘1’,’2’,’3’]
s = "1,2,3"
l = s.split(',')
print(l)


#如何实现[‘1’,’2’,’3’]变成[1,2,3]
ls = ['1','2','3']
rs = map(int, ls)
print(list(rs))##[1, 2, 3]


#求结果：  a. [ i % 2 for i in range(10) ]  b. ( i % 2 for i in range(10) )
print([ i % 2 for i in range(10) ])#[0,1,0,1,0,1,0,1,0,1]
print( i % 2 for i in range(10) ) #<generator object <genexpr> at 0x026B3BF0>


#一行代码实现9*9乘法表
print ("\n".join("\t".join(["%s*%s=%s" %(x,y,x*y) for y in range(1, x+1)]) for x in range(1, 10)))
print('\n'.join([' '.join(['%s*%s=%-2s' %(j,i,i*j) for j in range(1, i+1)]) for i in range(1, 10)]))

#求结果
def num():
    return [lambda x : i*x for i in range(4)]
'''
应用到闭包函数：
当调用函数的时候，都会优先在外部作用域中查找i变量，这时列表生产式中循环立马执行，最后i赋值为3
'''
print([m(5) for m in num()])

'''
自动化测试http送礼接口
请求格式
https://192.168.0.1/sendGift.htm?parameter={"AVID":1006575,"giftCount":1,
"giftID":5000126,"toUserID":900713489,"userID":900003367}
&t=1522750524013&k=16kjk452hkjhk4j5lkj5879879879
t:当前时间毫秒数
K：校验串，校验串加密规则Md5（authenCode+time+text+key）
其中：authenCode：X-Token;
time:与请求中的t相同的时间戳；
text：url中parameter={xxx}的部分，包含parameter=；
key：1234567890
请求方式：get
请写代码调用测试送礼接口，代码不限。
'''

# -*- coding: UTF-8 -*-

import time
import json
import requests
import hashlib   

t = int(time.time() * 1000)
d = {"AVID":1006575,"giftCount":1,"giftID":5000126,"toUserID":900713489,"userID":900003367}
dd = json.dumps(d)
text = "parameter="+dd
src = "X-Token"+str(t)+text+"1234567890"
m = hashlib.md5()
m.update(src.encode('utf-8'))
k = m.hexdigest()
params = {'parameter':text, 't':t,'k':k}
r = requests.get('https://192.168.0.1/sendGift.htm', params)
